*******************************************************
*
* PRIMARY BOOT LOADER
*
*******************************************************
*
* ZORISLAV SHOYAT, 2/3/2015, 22:52, ATELIER, DELPHINUS
*
* V0.1
* V0.2 - 30/3/2015, 19:29
*      ADDED BOOT ROM REVISION DATE 'D'
*      PLEASE REMEMBER TO CHANGE THE DATE WHEN
*      CHANGING THE BOOT ROM AND/OR THE CPU
*
*******************************************************

*******************************************************
*
* FUNCTIONALITY:
*    READ FROM MAINTENANCE CONSOLE UNTIL
*    THE CHARACTER '-' IS ENCOUNTERED
*
* THE BOOT PROGRAMME LOADED HAS TO PUT IT'S
* EXCHANGE PACKAGE AT ORIGIN 0
*
*******************************************************

*******************************************************
*
* CRAY-VI MEMORY MAPPED INPUT/OUTPUT SPACE
*
*******************************************************

* $BASE MUST BE SHIFTED LEFT 4 PLACES TO GET THE PROPER ADDRESS !!
*IO$BASE =  H'FFFF00 * I/O BASE, USE FOR ALL MAINTENANCE I/O OPERATIONS
IO$BASE  =  H'100000 * I/O BASE, USE FOR ALL MAINTENANCE I/O OPERATIONS

**************************
* Internal LED address
**************************
*
LED$OUT	=	H'8	* WRITE SETS LEDS TO LOWEST 8 BITS OF DATA
			* READ READS THE PRESENT STATE OF LEDS

**************************
* Internal UART addresses
**************************
*
* This is an addition to the original CRAY computers to allow direct
* control of the processor - loading and monitoring programmes
* 
* THE UART ACCEPTS/EXPECTS UP TO 8 BYTES (1 WORD) OF DATA, DEFINE BY CVL
*
TX$BUSY	=	H'0	* BIT 0 OF READ WORD SET MEANS THE TRANSMITTER IS BUSY
RX$READY	=	H'1	* BIT 0 OF READ WORD SET MEANS THERE IS DATA AVAILABLE
RX$DATA	=	H'2	* READ CVL$RX BYTES FROM LEFT [63:56] TO RIGHT
TX$DATA	=	H'3	* WRITE CVL$TX BYTES FROM LEFT [63:56] TO RIGHT [7:0]
CVL$TX	=	H'4	* CHARACTER VECTOR LENGTH (TRANSMITTED)
CVL$RX	=	H'5	* CHARACTER VECTOR LENGTH (EXPECTED)
SWITCH$IN	=	D'9	* E2LP SWITCHBOARD
BUTTON$IN	=	D'10	* DIAMOND BUTTONS


*****************************
*
* DEADSTART EXCHANGE PACKAGE
*
*****************************

	ORG	O'0
	ENTRY	BOOT,M

*****************************************************************
*
* FIRST RELOCATE TO HIGH MEMORY, AS WE WILL BE READING
* (BOOTING) INTO MEMORY FROM LOCATION 0
*
HIGHMEM	=	H'5E00		* MEMORY ADDRESS / LAST 512 WORDS
HIGHPROG	=	H'17800		* PROGRAMME ADDRESS / IS 2048 PARCELS

* FIRST ENABLE BIDIRECTIONAL MEMORY
BOOT	EBM

	S1	BGNLOAD
	S2	ENDLOAD
	S3	HIGHMEM
	S4	S2-S3	* ADJUST FOR HIGH 'ORG'
	A6	S4	* LENGTH OF BOOT LOADER
	A6	A6+1
	A1	S1	* BGNLOAD
	A7	HIGHMEM	* PLACE TO COPY IT TO
	A3	D'64
	A4	A3	* 64
COPYBOOT	VL	A3
	A0	A6-A3
	JAP	COPYMANY
	VL	A6
COPYMANY	A0	A1
	V0	,A0,1
	A0	A7
	,A0,1	V0
	A1	A1+A4
	A7	A7+A4
	A6	A6-A3
	A0	A6
	JAZ	LOADER
	JAP	COPYBOOT

* SYNCHRONISE MEMORY BEFORE JUMP
	CMR
	J	LOADER

********************************
*
* THIS PART IS MOVED TO HIGHPROG
*
	ALIGN
BGNLOAD	=	W.*O
	ORG	HIGHPROG

$IO$BASE$	CON	IO$BASE	* INDIRECT IO$BASE ADDRESS
			* ALLOWS IT TO BE FULL 24 BIT
LOADER	
	A2	SCHAR
	A5	$IO$BASE$,0
	LED$OUT,A5	A2

TITLE	A7	INTRO
	A1	D'8
	CVL$TX,A5	A1
	A2	D'11
GREETCHR	S1	,A7
GREET	A0	TX$BUSY,A5
	JAN	GREET
	TX$DATA,A5	S1
	A7	A7+1
	A2	A2-1
	A0	A2
	JAN	GREETCHR

FINGREET  A0        TX$BUSY,A5 * WAIT UNTIL ALL CHARACTERS ARE TRANSMITTED
          JAN       FINGREET  * BEFORE WE CHANGE THE CVL$TX !

*
* NOW BOOT THE COMPUTER
*
*    A4 IS 'RECEIVING' FLAG, SO WHEN IT IS SET WE DO NOT SHOW RTC TICKS
*
*
	A6	1
	CVL$RX,A5	A6	* EXPECT CHAR BY CHAR, REQUEST DATA (RTS)
	CVL$TX,A5	A6	* ECHO JUST THIS ONE CHAR
	A7	0	* LOAD PROGRAMME FROM ORG 0
	S2	O'60	* '0'
	S4	O'101	* 'A'
	S5	O'107	* 'F'+1
	A4	0	* NOT RECEIVING

CHARLOP	A3	D'16
	S7	0

WAITRX	A0	A4	* RECEIVING?
	JAN	RDRX
	S1	RT	* SHOW ACTIVITY
	S1	S1>D'27
	LED$OUT,A5	S1
RDRX	A0	RX$READY,A5
	JAZ	WAITRX
	S1	RX$DATA,A5

ECHO	A0	TX$BUSY,A5
	JAN	ECHO
	TX$DATA,A5	S1
	
*
* DECODE THE CHARACTER
*    IGNORE EVERYTHING EXCEPT VALID HEX CHARS
*    AND COMMANDS "X" - RESET BOOTLOADER (START LOADING FROM ORG O'0
*    AND COMMANDS "V" - OUTPUT THE BOOT/CPU VERSION AND DATE
*                 "-" - EXIT FROM BOOTLOADER (EXCHANGE ADD XA 0)
*
SCHAR	=	H'53	*'S'
MINUS	=	H'2D
NIBBLE	=	H'0F

	S1	S1>D'56	* PUT INTO LOW BITS
			* IGNORE ALL EXCEPT '-' 'X' '0'..'9' AND 'A'..'F'
	S6	MINUS
	S0	S1-S6	* '-' ?
	JSZ	FINISHED

	S6	O'130	* 'X' -> RETURN TO PROMPT
	S0	S1-S6
	JSZ 	LOADER

	S6	O'126	* 'V' -> PRINT THE BOOT ROM REVISION DATE
	S0	S1-S6
	JSZ 	VERSION

	S6	NIBBLE
	S6	S1&S6	* NIBBLE IN S6
			* CHECK RANGE
	S0	S1-S2	* < '0' ?
	JSM	WAITRX
	S3	O'72	* '9'+1
	S0	S1-S3	* < '9'+1 ?
	JSM	NUMBER
	S0	S1-S4	* < 'A'
	JSM	WAITRX
	S0	S1-S5	* < 'F'+1
	JSP	WAITRX
			
	S3	D'9	* 'A'..'F'
	S6	S6+S3
		
NUMBER	S7	S7<4	* SHIFT BY NIBBLE
	S7	S7!S6	* MERGE
	LED$OUT,A5	S7	* SHOW MOVING NIBBLES (LOW BYTE)
	A4	1	* RECEIVING
	A3	A3-1
	A0	A3
	JAN	WAITRX

	0,A7	S7
	A7	A7+1
	J	CHARLOP

* CLEAN UP FOR THE NEW PROGREMME

FINISHED	S1	CRLF2,0	* Get two newlines
WAITFIN	A0	TX$BUSY,A5
	JAN	WAITFIN
	A1	4
	CVL$TX,A5	A1
	TX$DATA,A5	S1

	A1	0	* Close the transmitter and receiver
	CVL$TX,A5	A1
	CVL$RX,A5	A1


* AND FINALLY EXIT TO THE NEW EXCHANGE PACKAGE

EXCHANGE	EXIT
	J	LOADER	* IF THE PROGRAMME RETURNS READ IN ANOTHER

**********************************************
*
* PRINT THE DATE AND/OR VERSION OF BOOT/CPU
*
**********************************************
VERSION	A7	DATE
	A1	D'8
	CVL$TX,A5	A1
	A2	D'4
VERSCHR	S1	,A7
VERS	A0	TX$BUSY,A5
	JAN	VERS
	TX$DATA,A5	S1
	A7	A7+1
	A2	A2-1
	A0	A2
	JAN	VERSCHR
	J	LOADER

* GREETINGS
          ALIGN
 
INTRO     DATA      H'0D0A
	DATA      A'CRAY-VI'
	DATA      H'0D0A
	DATA      A'by Seymour Cray, Christopher Fenton and Zorislav Shoyat'
CRLF2	DATA      H'0D0A0D0A
	DATA      A'BOOT:'
	DATA      H'0D0A
	ALIGN
DATE	DATA	H'0D0A0A
	DATA	A'V2.002.B - 20/03/2015, 21:48 '
	CON	0	* JUST FOR THE END ... 
 
ENDLOAD	=	W.*O	

	END

*
* ALTERNATIVE, TAKES 1 WORD MORE THAN ABOVE USING "DATA"
*

	ALIGN
INTRO	CON	A'Cray-VI '
	CON	H'0D0A000000000000
	CON	A'by Seymo'
	CON	A'ur Cray,'
	CON	A' Christo'
	CON	A'pher Fen'
	CON	A'ton and '
	CON	A'Zorislav'
	CON	A' Shoyat'
CRLF2	CON	H'0D0A0D0A00000000
PROMPT	CON	A'BOOT:'
CRLF	CON	H'0D0A000000000000

